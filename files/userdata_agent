#!/bin/bash -x
export curlprefix=appropriate
export rancher_server_ip='${server_address}'

curl https://releases.rancher.com/install-docker/${docker_version_agent}.sh | sh

apt-get update
apt-get -y install jq

while true; do
  docker run --rm $curlprefix/curl -sLk https://$rancher_server_ip/ping && break
  sleep 5
done

# Login
while true; do

    LOGINRESPONSE=$(docker run \
        --rm \
        $curlprefix/curl \
        -s "https://$rancher_server_ip/v3-public/localProviders/local?action=login" -H 'content-type: application/json' --data-binary '{"username":"admin","password":"${admin_password}"}' --insecure)
    LOGINTOKEN=$(echo $LOGINRESPONSE | jq -r .token)

    if [ "$LOGINTOKEN" != "null" ]; then
        break
    else
        sleep 5
    fi
done

# Test if cluster is created
while true; do
  CLUSTERID=$(docker run \
    --rm \
    $curlprefix/curl \
      -sLk \
      -H "Authorization: Bearer $LOGINTOKEN" \
      "https://$rancher_server_ip/v3/clusters?name=${cluster_name}" | jq -r '.data[].id')

  if [ -n "$CLUSTERID" ]; then
    break
  else
    sleep 5
  fi
done

# Get role flags from hostname
ROLEFLAG=`hostname | awk -F'-' '{ print $NF }'`
if [[ "$ROLEFLAG" == "all" ]]; then
  ROLEFLAG="all-roles"
fi

# Get token
# Test if cluster is created
while true; do
  AGENTCMD=$(docker run \
    --rm \
    $curlprefix/curl \
      -sLk \
      -H "Authorization: Bearer $LOGINTOKEN" \
      "https://$rancher_server_ip/v3/clusterregistrationtoken?id=$CLUSTERID" | jq -r '.data[].nodeCommand' | head -1)

  if [ -n "$AGENTCMD" ]; then
    break
  else
    sleep 5
  fi
done

# Combine command and flags
COMPLETECMD="$AGENTCMD --$ROLEFLAG"

# Run command
$COMPLETECMD
